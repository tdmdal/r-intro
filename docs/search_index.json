[["index.html", "Intro to R Welcome to Intro to R for Business Whats R About this site R Workshop", " Intro to R Welcome to Intro to R for Business Whats R R is a powerful computer language for statistical computing. R is free, open source and available on every major platform. R has a huge set of packages for statistical modelling, machine learning, visualization as well as for communicating the results of your analysis in the form of beautiful interactive apps. RStudio, the Integrated Development Environment (IDE), provides a tailored space for data science needs such as effective data handling and storage, interactive data analysis, implementing statistical and machine learning techniques and graphical facilities. R also has a diverse and welcoming community such as the R meetups and #rstats twitter community. For more information on R, visit the official R-project website. About this site Intro to R for Business is a companion site for your Intro to R workshops, a prerequisite for select courses within Rotman programs. This site provides information on the workshops, items covered during the workshops, additional resources such as practice questions, links to other R books and tutorial to aid for further learning. As with any language the initial learning curve can be steep. So we advise that you use R often and regularly to maintain momentum and build your R skill. R Workshop Event details Intro to Data Analysis (in R) Session 1 Date: Thursday, September 16, 2021 Time: 6:00 PM - 8:00 PM (EST) Location: Online Session 2 Date: Thursday, September 23, 2021 Time: 6:00 PM - 8:00 PM (EST) Location: Online Contact: Syllabus TBD "],["data-structure.html", "1 Data structure 1.1 Operators 1.2 Objects 1.3 Data Types", " 1 Data structure 1.1 Operators Let us start with the basic. Almost all programming languages can be used as a calculator. You can use the +, -, * and / symbols to perform addition, subtraction, multiplication and division between two numeric values. These are called arithmetic (binary) operators. Type the following lines of code on the RStudio console pane and check the results of these operations: 2 + 2 10 - 5 4.5*3 4/2 The [1] in front of the results indicates that the value after it is the first value of the result for that operation. Some other arithmetic operators are ^ or ** for exponentiation, %% modulus and %/% for integer division. Logical operators perform comparison between two values. Logical operators return either True or False. Type and run the following lines of code and check the results: 5 &lt; 4 # less than 2 &gt; 1 # greater than 2==1 # exactly equal to 5&gt;=5 # greater than and equal to 5!=6 # not equal to 1.2 Objects Creating Objects The power of programming lies in its ability to not only manipulate numeric values but also textual values. Any value can be stored as an object in a computer program and then referenced later for further manipulation. The assignment operator, =, is used to assign a value to an object. It comprises the less than symbol &lt; and a hyphen -. Manipulation to the value can be done by manipulating the object. a &lt;- 5 a+5 a*2.5 a&gt;=5 Object provide a way of storing data with a descriptive name such that the programs can be easily read and understood by its readers. For example, we can create an object aapl, which is the ticker for the company Apple Inc.Â and assign it a value of 274.5b, which is Apples revenue in billions for the year 2020. Now, every time you type aapl on the console, it will print 274.5b, unless you reassign a different value to this object. aapl &lt;- &quot;274.5b&quot; aapl Naming Objects Naming an object is a not that easy. You want the name to be meaningful and easily understood but not very lengthy. Objects with multiple words can be created by joining them with an underscore or a dot. You can also capitalize the different words. Object names cannot start with a number or a dot. Avoid using alphanumeric character in object names. Most importantly do not use a name that has already been assigned to some other value, unless you have good reason to do so. For example, variable pi exists in R by default. So does keyword variables like TRUE, FALSE, NA, etc. Do not use these names while creating an object. Doing so will override their default value and you have to restart the R session to revert back. pi TRUE FALSE NA R is case sensitive meaning TRUE and True are not the same. Try it yourself and see what you get! So far, you have created two objects, a and aapl. In the top right hand pane of RStudio, you will see these two objects listed on the Environment tab. If you click on the down arrow by the List icon and select Grid view, you will see additional details about these objects such as type, length, size and value. 1.3 Data Types Lets look at the type in detail because it is important to know how R deals with different types of data. Type of an object, also known as its data type, tells us the kind of operations that is possible with that object. For example, a has numeric data type and therefore arithmetic operations can be performed with it. aapl is of character type and therefore, arithmetic operators cannot be applied to it. If you do, you will receive an error: aapl+1 aapl*3 aapl/3 The error message tells you that you are applying a binary operator to a non-numeric value. "],["programming-structure.html", "2 Programming structure", " 2 Programming structure Under construction "],["programming-projects.html", "3 Programming projects", " 3 Programming projects Under construction "],["starting.html", "A Install R and RStudio A.1 Windows A.2 Mac A.3 Linux", " A Install R and RStudio To begin using R you will need to install R as well as RStudio, which is an integrated development environment (IDE) for R. Both are available for Windows, Mac or Linux. To download R, go to the Comprehensive R Archive Network (CRAN). Note: Administrative privileges will be needed to install new software on your computer. A.1 Windows Once on the CRAN page, click the Download R for Windows link and then click either the base link or the install R for the first time link. Next, click the first link at the top of the page, which should be the latest version of R for Windows. As of this writing, R4.1.1 is the latest version of R for Windows. An installer program will be downloaded. Click and run the installation wizard from your Downloads folder. Upon completion, R will be installed into your Program Files folders and a shortcut to R will also be placed in your Start menu. A.2 Mac Once on the CRAN page, click the Download R for Mac link. The top of the page will have information on the latest version of R for Mac. There will also be download instructions if you are using terminal. Otherwise, right below there will be a package link (with a .pkg extension) to the latest version of R for each macOS version. As of this writing, the latest R for Mac version package is R-4.1.0.pkg. You will see multiple links with same version. Click the one which corresponds to your macOS version. An installer program will be downloaded. Click and run the installation wizard from your Downloads folder. Choose the default options, which are suitable for most users. A.3 Linux R comes preinstalled on many Linux system. To upgrade to the newest version of R, go to the CRAN page and click the Download R for Linux link. Choose and click the linux system you have and follow the directory trail to the version of Linux you wish to install on. "],["install-rstudio.html", "B Install RStudio", " B Install RStudio R is a computer language. To run programs written in R you will need a tool that your computer can use to interpret R. This can be a UNIX terminal. However, RStudio is more popular due to its easy-to-use interface. You can also use other IDE of your choice, given it is R compatible. There are two versions of RStudio, Desktop and Server, available to download for free. Choose the Desktop version by clicking on Download RStudio Desktop link on the Rstudio products page. Follow the instructions to complete the installation. Once completed, you can use RStudio as most other programs in your computer by simply opening RStudio. When you open RStudio, you will see three panes. The largest pane is the console window, which is exactly the same as what you would see if you opened R application. This is where you will write your R codes and run them. The remaining two panes serve as text editor, graphics window, debugger, file manager, package manager and much more. You will learn about these functions as we require them. ADD MORE ON HOW TO USE RSTUDIO Note: When a new release of the R and/or RStudio is available for your computer, you can follow the same installation process to upgrade to the new version of the software. "],["r-packages.html", "C R packages C.1 Installing R packages C.2 Loading R packages C.3 Updating R package", " C R packages C.1 Installing R packages R comes preloaded with many useful functions. In addition, many people share useful functions they have developed as a package through CRAN and github. These packages will need to be installed on your computer before you can begin using them. The easiest way to install an R package is to use the install.packages function. For example, type and run the following line of code in console window of RStudio to install the ggplot2 package: install.packages(&#39;ggplot2&#39;) You can also install multiple packages at once by inputting them as an R list: install.packages( c(&#39;dplyr&#39;, &#39;tidyr&#39;, &#39;stringr&#39;) ) Often there are many packages that have very similar purpose. You will need to do a bit of research to know which packages might be the best for you. R-packages mailing list, R-bloggers and RStudio support are some places you can go to obtain valuable information about R packages. C.2 Loading R packages Once the packages are installed, every time you want to use it you will need to load them. The reason for installing and loading packages is to prevent R from becoming slow, by having only those programs that you need instead of everything that is available out there for use. To load an R package into the R environment you are working on, use the library function: library(ggplot2) Note that you no longer need to use the quotation marks here. C.3 Updating R package Catching bugs, improving performance and updating programs are important part of software maintenance. Thus, package authors occasionally release a new version of their packages. You will need to update the packages version in order to take advantage of improvements made to those packages. To do so, R provide the update.packages function: update.packages( c(&#39;dplyr&#39;, &#39;tidyr&#39;, &#39;stringr&#39;) ) Restarting R session is required after updating packages. Simply close RStudio and reopen it to begin using the updated version of the packages. "],["r-online-learning-resources.html", "D R online learning resources", " D R online learning resources "]]
